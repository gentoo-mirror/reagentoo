From 80b3af48f10563402adb13f3a7f75df5838fbf32 Mon Sep 17 00:00:00 2001
From: John Preston <johnprestonmail@gmail.com>
Date: Fri, 1 Jan 2021 15:36:18 +0400
Subject: [PATCH] Pass through missing audio ssrcs.

---
 src/media/engine/webrtc_media_engine.cc |  3 ++-
 src/media/engine/webrtc_media_engine.h  |  2 ++
 src/media/engine/webrtc_voice_engine.cc | 13 +++++++++++--
 src/media/engine/webrtc_voice_engine.h  |  5 ++++-
 4 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/src/media/engine/webrtc_media_engine.cc b/src/media/engine/webrtc_media_engine.cc
index 7ac666e..3494525 100644
--- a/src/media/engine/webrtc_media_engine.cc
+++ b/src/media/engine/webrtc_media_engine.cc
@@ -39,7 +39,8 @@ std::unique_ptr<MediaEngineInterface> CreateMediaEngine(
       std::move(dependencies.audio_decoder_factory),
       std::move(dependencies.audio_mixer),
       std::move(dependencies.audio_processing),
-      dependencies.audio_frame_processor, trials);
+      dependencies.audio_frame_processor, trials,
+      std::move(dependencies.onUnknownAudioSsrc));
 #ifdef HAVE_WEBRTC_VIDEO
   auto video_engine = std::make_unique<WebRtcVideoEngine>(
       std::move(dependencies.video_encoder_factory),
diff --git a/src/media/engine/webrtc_media_engine.h b/src/media/engine/webrtc_media_engine.h
index 34ec4cd..5657345 100644
--- a/src/media/engine/webrtc_media_engine.h
+++ b/src/media/engine/webrtc_media_engine.h
@@ -53,6 +53,8 @@ struct MediaEngineDependencies {
   std::unique_ptr<webrtc::VideoEncoderFactory> video_encoder_factory;
   std::unique_ptr<webrtc::VideoDecoderFactory> video_decoder_factory;
 
+  std::function<void(uint32_t)> onUnknownAudioSsrc = nullptr;
+
   const webrtc::WebRtcKeyValueConfig* trials = nullptr;
 };
 
diff --git a/src/media/engine/webrtc_voice_engine.cc b/src/media/engine/webrtc_voice_engine.cc
index 2ed78b4..690c6e6 100644
--- a/src/media/engine/webrtc_voice_engine.cc
+++ b/src/media/engine/webrtc_voice_engine.cc
@@ -245,7 +245,8 @@ WebRtcVoiceEngine::WebRtcVoiceEngine(
     rtc::scoped_refptr<webrtc::AudioMixer> audio_mixer,
     rtc::scoped_refptr<webrtc::AudioProcessing> audio_processing,
     webrtc::AudioFrameProcessor* audio_frame_processor,
-    const webrtc::WebRtcKeyValueConfig& trials)
+    const webrtc::WebRtcKeyValueConfig& trials,
+    std::function<void(uint32_t)> onUnknownAudioSsrc)
     : task_queue_factory_(task_queue_factory),
       adm_(adm),
       encoder_factory_(encoder_factory),
@@ -256,7 +257,8 @@ WebRtcVoiceEngine::WebRtcVoiceEngine(
       audio_red_for_opus_trial_enabled_(
           IsEnabled(trials, "WebRTC-Audio-Red-For-Opus")),
       minimized_remsampling_on_mobile_trial_enabled_(
-          IsEnabled(trials, "WebRTC-Audio-MinimizeResamplingOnMobile")) {
+          IsEnabled(trials, "WebRTC-Audio-MinimizeResamplingOnMobile")),
+      onUnknownAudioSsrc_(onUnknownAudioSsrc) {
   // This may be called from any thread, so detach thread checkers.
   worker_thread_checker_.Detach();
   signal_thread_checker_.Detach();
@@ -2232,6 +2234,13 @@ void WebRtcVoiceMediaChannel::OnPacketReceived(rtc::CopyOnWriteBuffer packet,
   }
   RTC_DCHECK(!absl::c_linear_search(unsignaled_recv_ssrcs_, ssrc));
 
+  if (engine()->onUnknownAudioSsrc_) {
+    engine()->onUnknownAudioSsrc_(ssrc);
+  }
+
+  // We don't want to process unsignalled streams
+  return;
+
   // Add new stream.
   StreamParams sp = unsignaled_stream_params_;
   sp.ssrcs.push_back(ssrc);
diff --git a/src/media/engine/webrtc_voice_engine.h b/src/media/engine/webrtc_voice_engine.h
index c2da3b9..cf60b05 100644
--- a/src/media/engine/webrtc_voice_engine.h
+++ b/src/media/engine/webrtc_voice_engine.h
@@ -56,7 +56,8 @@ class WebRtcVoiceEngine final : public VoiceEngineInterface {
       rtc::scoped_refptr<webrtc::AudioMixer> audio_mixer,
       rtc::scoped_refptr<webrtc::AudioProcessing> audio_processing,
       webrtc::AudioFrameProcessor* audio_frame_processor,
-      const webrtc::WebRtcKeyValueConfig& trials);
+      const webrtc::WebRtcKeyValueConfig& trials,
+      std::function<void(uint32_t)> onUnknownAudioSsrc);
 
   WebRtcVoiceEngine() = delete;
   WebRtcVoiceEngine(const WebRtcVoiceEngine&) = delete;
@@ -145,6 +146,8 @@ class WebRtcVoiceEngine final : public VoiceEngineInterface {
   // redundancy for opus audio.
   const bool audio_red_for_opus_trial_enabled_;
   const bool minimized_remsampling_on_mobile_trial_enabled_;
+
+  std::function<void(uint32_t)> onUnknownAudioSsrc_ = nullptr;
 };
 
 // WebRtcVoiceMediaChannel is an implementation of VoiceMediaChannel that uses
-- 
2.30.0

